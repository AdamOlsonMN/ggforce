% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bezier.R
\name{geom_bezier}
\alias{geom_bezier}
\alias{geom_bezier0}
\alias{geom_bezier2}
\alias{stat_bezier}
\alias{stat_bezier0}
\alias{stat_bezier2}
\title{Create quadratic or cubic bezier curves}
\usage{
stat_bezier(mapping = NULL, data = NULL, geom = "path",
  position = "identity", na.rm = FALSE, show.legend = NA, n = 100,
  inherit.aes = TRUE, ...)

geom_bezier(mapping = NULL, data = NULL, stat = "bezier",
  position = "identity", arrow = NULL, lineend = "butt", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, n = 100, ...)

stat_bezier2(mapping = NULL, data = NULL, geom = "path_interpolate",
  position = "identity", na.rm = FALSE, show.legend = NA, n = 100,
  inherit.aes = TRUE, ...)

geom_bezier2(mapping = NULL, data = NULL, stat = "bezier2",
  position = "identity", arrow = NULL, lineend = "butt", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, n = 100, ...)

stat_bezier0(mapping = NULL, data = NULL, geom = "bezier0",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)

geom_bezier0(mapping = NULL, data = NULL, stat = "bezier0",
  position = "identity", arrow = NULL, lineend = "butt", na.rm = FALSE,
  show.legend = NA, inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}}
or \code{\link[ggplot2]{aes_}}. If specified and \code{inherit.aes = TRUE}
(the default), is combined with the default mapping at the top level of the
plot. You only need to supply mapping if there isn't a mapping defined for
the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{geom, }{stat Override the default connection between \code{geom_arc} and
\code{stat_arc}.}

\item{position}{Position adjustment, either as a string, or the result of a
call to a position adjustment function.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with a
warning. If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped. \code{FALSE}
never includes, and \code{TRUE} always includes.}

\item{n}{The number of points to create for each segment}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics, rather
than combining with them. This is most useful for helper functions that
define both data and aesthetics and shouldn't inherit behaviour from the
default plot specification, e.g. borders.}

\item{...}{other arguments passed on to \code{\link[ggplot2]{layer}}. There
are three types of arguments you can use here:
\itemize{
 \item{Aesthetics: to set an aesthetic to a fixed value, like
 \code{color = "red"} or \code{size = 3.}}
 \item{Other arguments to the layer, for example you override the default
 \code{stat} associated with the layer.}
 \item{Other arguments passed on to the stat.}
}}

\item{arrow}{specification for arrow heads, as created by arrow()}

\item{lineend}{Line end style (round, butt, square)}
}
\description{
This set of geoms makes it possible to connect points creating either
quadratic or cubic beziers. bezier and bezier2 both work by calculating
points along the bezier and connecting these to draw the curve. bezier0
directly draws the bezier using bezierGrob and is thus probably more
performant. In line with the \code{\link{geom_link}} and
\code{\link{geom_link2}} differences geom_bezier creates the points, assign
an index to each interpolated point and repeat the aesthetics for the start
point, while geom_bezier2 interpolates the aesthetics between the start and
end points.
}
\details{
Input data is understood as a sequence of data points the first being the
start point, then followed by one or two control points and then the end
point. More than 4 and less than 3 points per group will throw an error.
\code{\link[grid]{bezierGrob}} only takes cubic beziers so if three points are
supplied the middle one as duplicated. This, along with the fact that
\code{\link[grid]{bezierGrob}} estimates the curve using an x-spline means
that the curves produced by geom_bezier and geom_bezier2 deviates from those
produced by geom_bezier0. If you want true bezier paths use geom_bezier or
geom_bezier2.
}
\section{Aesthetics}{

geom_link, geom_link2 and geom_lin0 understand the following aesthetics
(required aesthetics are in bold):
\itemize{
 \item{\strong{x}}
 \item{\strong{y}}
 \item{color}
 \item{size}
 \item{linetype}
 \item{alpha}
 \item{lineend}
}
}

\section{Computed variables}{


\describe{
 \item{x, y}{The interpolated point coordinates}
 \item{index}{The progression along the interpolation mapped between 0 and 1}
}
}
\examples{
# Lets make some data
lines <- data.frame(
  x = c(5, 12, 15, 9, 6),
  y = c(17, 20, 4, 15, 5),
  xend = c(19, 17, 2, 9, 5),
  yend = c(10, 18, 7, 12, 1),
  width = c(1, 10, 6, 2, 3),
  colour = letters[1:5]
)

ggplot() + geom_link(aes(x = x, y = y, xend = xend, yend = yend,
                         colour = colour, alpha = ..index..,
                         size = ..index..),
                     data = lines)

ggplot() + geom_link2(aes(x = x, y = y, colour = colour, size = width,
                          group = 1),
                      data = lines, lineend = 'round', n = 500)

}
\author{
Thomas Lin Pedersen
}

